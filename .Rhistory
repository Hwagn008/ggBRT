library(roxygen2)
roxygen2::roxygenise()
setwd("..")
getwd()
roxygen2::roxygenise()
getwd()
setwd("..")
library(roxygen2)
roxygen2::roxygenise()
getwd()
setwd("..")
getwd()
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT")
roxygen2::roxygenise()
library(roxygen2)
roxygen2::roxygenise()
setwd("..")
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT")
roxygen2::roxygenise()
getwd()
getwd()
setwd("..")
getwd()
roxygen2::roxygenise()
roxygenise()
getwd()
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT")
getwd()
library(roxygen2)
roxygenise()
library(roxygen2)
roxygenise()
getwd()
library(roxygen2)
roxygenise()
library(devtools)
library(roxygen2)
roxygenise()
library(roxygen2)
library(devtools)
library(roxygen2)
roxygenise()
getwd()
document()
roxygenise()
document()
document()
roxygen2::roxygenize
roxygenise()
document()
document()
getwd()
document()
document()
library(devtools)
document()
roxygen2::roxygenize()
roxygen2::roxygenise()
?ggInfluence
devtools::document()
devtools::document()
roxygen2::roxygenise()
library(ggBRT)
?ggPerformance
library(roxygen2)
roxygen2::roxygenise()
library(ggBRT)
devtools::use_vignette("ggBRT-vignette")
data("iris")
dat<-data("iris")
dat
dat<-data(iris)
dat
data(iris)
Hawaii_RegimesPredictors<-read.delim("RegimesPredictors.txt", h=T, dec=',')
View(iris)
View(Hawaii_RegimesPredictors)
Hawaii_PredictorsCategories<-read.delim("PredictorsCategories.txt", h=T, dec=',')
View(Hawaii_PredictorsCategories)
devtools::use_data(Hawaii_RegimesPredictors)
devtools::use_data(Hawaii_PredictorsCategories)
roxygen2::roxygenise()
library(ggBRT)
library(ggBRT)
roxygen2::roxygenise()
library(ggBRT)
roxygen2::roxygenise()
library(ggBRT)
roxygen2::roxygenise()
library(ggBRT)
getwd()
git init
git init
dsf sd
git init
file.exists("~/.ssh/id_rsa.pub")
library(roxygen2)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
Hawaii_PredictorsCategories<-read.delim("PredictorsCategories.txt", h=T, dec=',')
Hawaii_RegimesPredictors<-read.delim("Hawaii_RegimesPredictors.txt", h=T, dec=',')
Hawaii_PredictorsCategories<-read.delim("Hawaii_PredictorsCategories.txt", h=T, dec=',')
devtools::use_data(Hawaii_PredictorsCategories)
devtools::use_data(Hawaii_RegimesPredictors)
devtools::use_data(BRT_RegimesPredictors.Rdata)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(ggBRT)
library(ggBRT)
library(ggBRT)
library(ggBRT)
roxygen2::roxygenise()
rmarkdown::render('ggBRT-vignette.Rmd')
setwd(/vignettes)
getwd()
setwd(/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT/vignettes)
setwd(Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT/vignettes)
getwd()
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT/vignettes")
devtools::use_data(BRT_RegimesPredictors.Rdata)
library(ggBRT)
rmarkdown::render('ggBRT-vignette.Rmd')
rmarkdown::render('ggBRT-vignette.Rmd')
rmarkdown::render('ggBRT-vignette.Rmd')
rmarkdown::render('ggBRT-vignette.Rmd')
rmarkdown::render('ggBRT-vignette.Rmd')
rmarkdown::render('ggBRT-vignette.Rmd')
library(ggBRT)
rmarkdown::render('ggBRT-vignette.Rmd')
getwd()
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT")
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT/data")
rmarkdown::render('ggBRT-vignette.Rmd')
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT")
rmarkdown::render('ggBRT-vignette.Rmd')
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT")
rmarkdown::render('ggBRT-vignette.Rmd')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
load(file='BRT_RegimesPredictors.rda')
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT")
load(file='BRT_RegimesPredictors.rda')
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT/data")
load(file='BRT_RegimesPredictors.rda')
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT/data")
load(file='BRT_RegimesPredictors.rda')
load("~/Box Sync/R/All scripts+txt files/ggBRT/data/BRT_RegimesPredictors.rda")
rmarkdown::render('ggBRT-vignette.Rmd')
library(ggBRT)
rmarkdown::render('ggBRT-vignette.Rmd')
setwd("/Users/jean-baptistejouffray/Box Sync/R/All scripts+txt files/ggBRT")
rmarkdown::render('ggBRT-vignette.Rmd')
setwd("~/Box Sync/R/All scripts+txt files/ggBRT")
rmarkdown::render('ggBRT-vignette.Rmd')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Load ggBRT
library(ggBRT)
# Import data
dat<-Hawaii_RegimesPredictors
PredictorsCat<-Hawaii_PredictorsCategories
# Select the set of 20 predictors
pred<-c(15:34)
# Run the boosted regression trees analyses
brt1 <- gbm.step(data=dat, gbm.x = pred, gbm.y = which(names(dat) == 'Regime1'),
family = "bernoulli", tree.complexity = 3,
learning.rate = 0.01, bag.fraction = 0.75)
library(ggBRT)
save(brt1,brt2,brt3,brt5,
brt1.boot,brt2.boot,brt3.boot,brt5.boot,
brt1.prerun,brt2.prerun,brt3.prerun,brt5.prerun,
Interact_boot_brt1,Interact_boot_brt2,Interact_boot_brt3,Interact_boot_brt5,
file = "Vignette_data.Rdata")
devtools::use_data(Vignette_data)
devtools::use_data(brt1,brt2,brt3,brt5,
brt1.boot,brt2.boot,brt3.boot,brt5.boot,
brt1.prerun,brt2.prerun,brt3.prerun,brt5.prerun,
Interact_boot_brt1,Interact_boot_brt2,Interact_boot_brt3,Interact_boot_brt5,
internal=T)
devtools::use_data(brt1,brt2,brt3,brt5,
brt1.boot,brt2.boot,brt3.boot,brt5.boot,
brt1.prerun,brt2.prerun,brt3.prerun,brt5.prerun,
Interact_boot_brt1,Interact_boot_brt2,Interact_boot_brt3,Interact_boot_brt5)
roxygen2::roxygenise()
library(ggBRT)
roxygen2::roxygenise()
ggMultiInfluence(brt1,brt2,brt3)
ggMultiInfluence<-function (...,col.gradient=c("white","lightblue4"),round=1,
col.text="grey10",col.grid=NULL,size.grid=0.3,legend.pos="bottom",
legend.dir="horizontal", scale.gradient=c(0,100)){
BRT<-list(...)
nBRT<-length(BRT)
dfContr<-list()
# Extract the relative influence of each predictor for each model
for (i in 1:nBRT){
dfContr[[i]]<-data.frame(BRT[[i]]$contributions)
if(is.null(names(BRT))){
colnames(dfContr[[i]])<-c("Predictor",paste("Model", i, sep = " "))}
else{
colnames(dfContr[[i]])<-c("Predictor",names(BRT)[i])}
}
# Merge them into a single dataframe
Influence<-join_all(dfContr, by = 'Predictor')
# Transform the data frame and round the values
I.melted <- melt(Influence)
I.melted$value<-round(I.melted$value,round)
# Plot the heatmap
p<-ggplot(I.melted, aes(x = variable, y = Predictor))+
geom_tile(aes(fill=value),size=size.grid)+
geom_text(aes(label=value,size=value), color=col.text,show.legend = FALSE)+
scale_x_discrete(position = "top") +
scale_fill_gradient(low=col.gradient[1],high =col.gradient[2],name="Relative influence (%)",
limits=scale.gradient)+
labs(x= "",y = "")+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.text.x = element_text(face="bold"),
legend.position=legend.pos,legend.direction=legend.dir)
if(!is.null(col.grid)){
p<-p+geom_tile(aes(fill=value),colour=col.grid,size=size.grid)+
geom_text(aes(label=value,size=value), color=col.text,show.legend = FALSE)}
print(p)
return(round(Influence$value,3))
}
ggMultiInfluence(brt1,brt2,brt3)
ggMultiInfluence<-function (...,col.gradient=c("white","lightblue4"),round=1,
col.text="grey10",col.grid=NULL,size.grid=0.3,legend.pos="bottom",
legend.dir="horizontal", scale.gradient=c(0,100)){
BRT<-list(...)
nBRT<-length(BRT)
dfContr<-list()
# Extract the relative influence of each predictor for each model
for (i in 1:nBRT){
dfContr[[i]]<-data.frame(BRT[[i]]$contributions)
if(is.null(names(BRT))){
colnames(dfContr[[i]])<-c("Predictor",paste("Model", i, sep = " "))}
else{
colnames(dfContr[[i]])<-c("Predictor",names(BRT)[i])}
}
# Merge them into a single dataframe
Influence<-join_all(dfContr, by = 'Predictor')
Influence<-round(Influence,3)
# Transform the data frame and round the values
I.melted <- melt(Influence)
I.melted$value<-round(I.melted$value,round)
# Plot the heatmap
p<-ggplot(I.melted, aes(x = variable, y = Predictor))+
geom_tile(aes(fill=value),size=size.grid)+
geom_text(aes(label=value,size=value), color=col.text,show.legend = FALSE)+
scale_x_discrete(position = "top") +
scale_fill_gradient(low=col.gradient[1],high =col.gradient[2],name="Relative influence (%)",
limits=scale.gradient)+
labs(x= "",y = "")+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.text.x = element_text(face="bold"),
legend.position=legend.pos,legend.direction=legend.dir)
if(!is.null(col.grid)){
p<-p+geom_tile(aes(fill=value),colour=col.grid,size=size.grid)+
geom_text(aes(label=value,size=value), color=col.text,show.legend = FALSE)}
print(p)
return(Influence)
}
ggMultiInfluence(brt1,brt2,brt3)
ggMultiInfluence<-function (...,col.gradient=c("white","lightblue4"),round=1,
col.text="grey10",col.grid=NULL,size.grid=0.3,legend.pos="bottom",
legend.dir="horizontal", scale.gradient=c(0,100)){
BRT<-list(...)
nBRT<-length(BRT)
dfContr<-list()
# Extract the relative influence of each predictor for each model
for (i in 1:nBRT){
dfContr[[i]]<-data.frame(BRT[[i]]$contributions)
if(is.null(names(BRT))){
colnames(dfContr[[i]])<-c("Predictor",paste("Model", i, sep = " "))}
else{
colnames(dfContr[[i]])<-c("Predictor",names(BRT)[i])}
}
# Merge them into a single dataframe
Influence<-join_all(dfContr, by = 'Predictor')
# Transform the data frame and round the values
I.melted <- melt(Influence)
I.melted$value<-round(I.melted$value,round)
# Plot the heatmap
p<-ggplot(I.melted, aes(x = variable, y = Predictor))+
geom_tile(aes(fill=value),size=size.grid)+
geom_text(aes(label=value,size=value), color=col.text,show.legend = FALSE)+
scale_x_discrete(position = "top") +
scale_fill_gradient(low=col.gradient[1],high =col.gradient[2],name="Relative influence (%)",
limits=scale.gradient)+
labs(x= "",y = "")+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.text.x = element_text(face="bold"),
legend.position=legend.pos,legend.direction=legend.dir)
if(!is.null(col.grid)){
p<-p+geom_tile(aes(fill=value),colour=col.grid,size=size.grid)+
geom_text(aes(label=value,size=value), color=col.text,show.legend = FALSE)}
print(p)
return(Influence)
}
ggMultiInfluence(brt1,brt2,brt3)
ggMultiInfluence<-function (...,col.gradient=c("white","lightblue4"),round=1,
col.text="grey10",col.grid=NULL,size.grid=0.3,legend.pos="bottom",
legend.dir="horizontal", scale.gradient=c(0,100)){
BRT<-list(...)
nBRT<-length(BRT)
dfContr<-list()
# Extract the relative influence of each predictor for each model
for (i in 1:nBRT){
dfContr[[i]]<-data.frame(BRT[[i]]$contributions)
if(is.null(names(BRT))){
colnames(dfContr[[i]])<-c("Predictor",paste("Model", i, sep = " "))}
else{
colnames(dfContr[[i]])<-c("Predictor",names(BRT)[i])}
}
# Merge them into a single dataframe
Influence<-join_all(dfContr, by = 'Predictor')
# Transform the data frame and round the values
I.melted <- melt(Influence)
I.melted$value<-round(I.melted$value,round)
# Plot the heatmap
p<-ggplot(I.melted, aes(x = variable, y = Predictor))+
geom_tile(aes(fill=value),size=size.grid)+
geom_text(aes(label=value,size=value), color=col.text,show.legend = FALSE)+
scale_x_discrete(position = "top") +
scale_fill_gradient(low=col.gradient[1],high =col.gradient[2],name="Relative influence (%)",
limits=scale.gradient)+
labs(x= "",y = "")+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.text.x = element_text(face="bold"),
legend.position=legend.pos,legend.direction=legend.dir)
if(!is.null(col.grid)){
p<-p+geom_tile(aes(fill=value),colour=col.grid,size=size.grid)+
geom_text(aes(label=value,size=value), color=col.text,show.legend = FALSE)}
print(p)
return(Influence,digits = 2)
}
ggMultiInfluence(brt1,brt2,brt3)
ggMultiInfluence<-function (...,col.gradient=c("white","lightblue4"),round=1,
col.text="grey10",col.grid=NULL,size.grid=0.3,legend.pos="bottom",
legend.dir="horizontal", scale.gradient=c(0,100)){
BRT<-list(...)
nBRT<-length(BRT)
dfContr<-list()
# Extract the relative influence of each predictor for each model
for (i in 1:nBRT){
dfContr[[i]]<-data.frame(BRT[[i]]$contributions)
if(is.null(names(BRT))){
colnames(dfContr[[i]])<-c("Predictor",paste("Model", i, sep = " "))}
else{
colnames(dfContr[[i]])<-c("Predictor",names(BRT)[i])}
}
# Merge them into a single dataframe
Influence<-join_all(dfContr, by = 'Predictor')
# Transform the data frame and round the values
I.melted <- melt(Influence)
I.melted$value<-round(I.melted$value,round)
# Plot the heatmap
p<-ggplot(I.melted, aes(x = variable, y = Predictor))+
geom_tile(aes(fill=value),size=size.grid)+
geom_text(aes(label=value,size=value), color=col.text,show.legend = FALSE)+
scale_x_discrete(position = "top") +
scale_fill_gradient(low=col.gradient[1],high =col.gradient[2],name="Relative influence (%)",
limits=scale.gradient)+
labs(x= "",y = "")+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.text.x = element_text(face="bold"),
legend.position=legend.pos,legend.direction=legend.dir)
if(!is.null(col.grid)){
p<-p+geom_tile(aes(fill=value),colour=col.grid,size=size.grid)+
geom_text(aes(label=value,size=value), color=col.text,show.legend = FALSE)}
print(p)
print(Influence,digits = 2)
}
ggMultiInfluence(brt1,brt2,brt3)
a<-ggMultiInfluence(brt1,brt2,brt3)
View(a)
roxygen2::roxygenise()
library(ggBRT)
ggInfluence(brt5)
library(roxygen2)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(ggBRT)
browseVignettes(package = "ggBRT")
library(ggBRT)
load("~/Box Sync/R/All scripts+txt files/ggBRT/R/sysdata.rda")
library(roxygen2)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(ggBRT)
roxygen2::roxygenise()
devtools::use_vignette("vignette2")
